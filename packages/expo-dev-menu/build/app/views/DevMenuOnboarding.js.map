{"version":3,"file":"DevMenuOnboarding.js","sourceRoot":"","sources":["../../../src/app/views/DevMenuOnboarding.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport Constants from 'expo-constants';\nimport { TouchableOpacity as TouchableOpacityGH } from 'react-native-gesture-handler';\nimport {\n  Dimensions,\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableOpacity as TouchableOpacityRN,\n  View,\n} from 'react-native';\n\nimport { StyledText } from '../components/Text';\nimport { StyledView } from '../components/Views';\n\ntype Props = {\n  onClose?: () => any;\n};\n\n// When rendered inside bottom sheet, touchables from RN don't work on Android, but the ones from GH don't work on iOS.\nconst TouchableOpacity = Platform.OS === 'android' ? TouchableOpacityGH : TouchableOpacityRN;\n\nconst KEYBOARD_CODES = {\n  ios: '\\u2318D',\n  android: '\\u2318M on MacOS or Ctrl+M on other platforms',\n};\n\nconst MENU_NARROW_SCREEN = Dimensions.get('window').width < 375;\nconst ONBOARDING_MESSAGE = (() => {\n  let fragment;\n  if (Constants.isDevice) {\n    if (Platform.OS === 'ios') {\n      fragment =\n        'you can shake your device or long press anywhere on the screen with three fingers';\n    } else {\n      fragment = 'you can shake your device';\n    }\n  } else {\n    fragment = `in a simulator you can press ${KEYBOARD_CODES[Platform.OS]}`;\n  }\n  return `Since this is your first time opening the Expo client, we wanted to show you this menu and let you know that ${fragment} to get back to it at any time.`;\n})();\n\nclass DevMenuOnboarding extends React.PureComponent<Props, any> {\n  onPress = () => {\n    if (this.props.onClose) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const headingStyles = MENU_NARROW_SCREEN\n      ? [styles.onboardingHeading, styles.onboardingHeadingNarrow]\n      : styles.onboardingHeading;\n\n    return (\n      <View style={styles.onboardingContainer}>\n        <StyledView\n          style={styles.onboardingBackground}\n          lightBackgroundColor=\"#fff\"\n          darkBackgroundColor=\"#000\"\n        />\n        <View style={styles.onboardingTopMargin} />\n        <View>\n          <View style={styles.onboardingHeadingRow}>\n            <StyledText style={headingStyles} lightColor=\"#595c68\">\n              Hello there, friend! ðŸ‘‹\n            </StyledText>\n          </View>\n          <StyledText style={styles.onboardingTooltip} lightColor=\"#595c68\">\n            {ONBOARDING_MESSAGE}\n          </StyledText>\n          <TouchableOpacity style={styles.onboardingButton} onPress={this.onPress}>\n            <Text style={styles.onboardingButtonLabel}>Got it</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  onboardingContainer: {\n    flex: 1,\n    paddingHorizontal: 36,\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    zIndex: 2,\n  },\n  onboardingBackground: {\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    opacity: 0.9,\n  },\n  onboardingTopMargin: {\n    // Moves the actual onboarding content a little bit down.\n    // This percentage value is also a percentage of screen's height.\n    height: '20%',\n  },\n  onboardingHeadingRow: {\n    flexDirection: 'row',\n    marginTop: 6,\n    marginRight: 16,\n    marginBottom: 8,\n  },\n  onboardingHeading: {\n    flex: 1,\n    fontWeight: '700',\n    fontSize: 22,\n    textAlign: 'center',\n  },\n  onboardingHeadingNarrow: {\n    fontSize: 18,\n    marginTop: 2,\n  },\n  onboardingTooltip: {\n    marginVertical: 10,\n    fontSize: 16,\n    textAlign: 'center',\n  },\n  onboardingButton: {\n    alignItems: 'center',\n    marginVertical: 12,\n    paddingVertical: 10,\n    backgroundColor: '#056ecf',\n    borderRadius: 3,\n  },\n  onboardingButtonLabel: {\n    color: '#fff',\n    fontSize: 16,\n  },\n});\n\nexport default DevMenuOnboarding;\n"]}